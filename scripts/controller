#!/usr/bin/env python

import rospy
import os
from rumble import RumbleController
from xbox_controller.srv import Rumble


class XBOXController:
    def __init__(self):
        self.device = rospy.get_param('~device', None)
        if self.device is None:
            from devices import get_devices
            for name, handlers in get_devices().items():
                if "X-Box" in name:
                    handler = handlers[0]
                    for handler_name in handlers:
                        if 'event' in handler_name:
                            handler = handler_name
                            break
                    self.device = '/dev/input/' + handler
                    break

        self.rumble_controller = RumbleController(self.device)
        self.is_available = self.check_availability()
        rospy.Service(rospy.get_param('~service_name', '/xbox_controller/rumble'), Rumble,
                      self.rumble_service_handler)

    def rumble_service_handler(self, data):
        self.rumble_controller.do(data.duration)
        return True

    def check_availability(self):
        return os.path.exists(self.device)

    def spin(self):
        rospy.spin()


if __name__ == "__main__":
    rospy.init_node("xbox_controller", anonymous=False)

    controller = XBOXController()
    controller.spin()
